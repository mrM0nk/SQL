CREATE OR ALTER PROCEDURE #usp_FindOptimalPath(@x0 INT, @y0 INT, @xn INT, @yn INT)
AS
BEGIN
	;WITH Cte
	AS
	(
		SELECT @x0 AS x, @y0 AS y, 0 AS it, CAST('-' + CAST(@x0 AS NVARCHAR) + CAST(@y0 AS NVARCHAR) AS VARCHAR(MAX)) PATH
		UNION ALL
		SELECT x+1, y+2, it+1, CONCAT(PATH, '-', CAST(x+1 AS VARCHAR), CAST(y+2 AS VARCHAR) ) FROM Cte WHERE (x+1 BETWEEN 1 AND 8) AND (y+2 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x+1 AS VARCHAR), CAST(y+2 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x+2, y+1, it+1, CONCAT(PATH, '-', CAST(x+2 AS VARCHAR), CAST(Y+1 AS VARCHAR) ) FROM Cte WHERE (x+2 BETWEEN 1 AND 8) AND (y+1 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x+2 AS VARCHAR), CAST(y+1 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x+2, y-1, it+1, CONCAT(PATH, '-', CAST(x+2 AS VARCHAR), CAST(y-1 AS VARCHAR) ) FROM Cte WHERE (x+2 BETWEEN 1 AND 8) AND (y-1 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x+2 AS VARCHAR), CAST(y-1 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x+1, y-2, it+1, CONCAT(PATH, '-', CAST(x+1 AS VARCHAR), CAST(y-2 AS VARCHAR) ) FROM Cte WHERE (x+1 BETWEEN 1 AND 8) AND (y-2 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x+1 AS VARCHAR), CAST(y-2 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x-1, y-2, it+1, CONCAT(PATH, '-', CAST(x-1 AS VARCHAR), CAST(y-2 AS VARCHAR) ) FROM Cte WHERE (x-1 BETWEEN 1 AND 8) AND (y-2 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x-1 AS VARCHAR), CAST(y-2 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x-2, y-1, it+1, CONCAT(PATH, '-', CAST(x-2 AS VARCHAR), CAST(y-1 AS VARCHAR) ) FROM Cte WHERE (x-2 BETWEEN 1 AND 8) AND (y-1 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x-2 AS VARCHAR), CAST(y-1 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x-2, y+1, it+1, CONCAT(PATH, '-', CAST(x-2 AS VARCHAR), CAST(y+1 AS VARCHAR) ) FROM Cte WHERE (x-2 BETWEEN 1 AND 8) AND (y+1 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x-2 AS VARCHAR), CAST(y+1 AS VARCHAR) ), PATH) = 0) AND (it < 6)
		UNION ALL
		SELECT x-1, y+2, it+1, CONCAT(PATH, '-', CAST(x-1 AS VARCHAR), CAST(y+2 AS VARCHAR) ) FROM Cte WHERE (x-1 BETWEEN 1 AND 8) AND (y+2 BETWEEN 1 AND 8) AND (CHARINDEX(CONCAT('-', CAST(x-1 AS VARCHAR), CAST(y+2 AS VARCHAR) ), PATH) = 0) AND (it < 6)
	),
	Cte_enumerate
	AS
	(
		SELECT *, ROW_NUMBER() OVER(ORDER BY it) AS rn
		FROM Cte
		WHERE x=@xn AND y=@yn
	),
	Cte_short
	AS
	(
		SELECT MIN (it) short
		FROM Cte_enumerate
	)
	SELECT * 
	FROM Cte_enumerate en 
	JOIN Cte_short sh ON en.it = sh.short
END
GO

EXEC #usp_FindOptimalPath 1, 1, 4, 8